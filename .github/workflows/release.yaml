name: Release

on:
  workflow_dispatch

jobs:
  build:
    name: "Release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short $GITHUB_SHA)"
      - name: Bootstrap
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Install requests
        run: |
          pip install requests
      - run: python build/main.py
      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      - run: npm install @iarna/toml
      - id: get-version
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            try {
                const fs = require('fs')
                const toml = require('@iarna/toml')
                const tomlString = fs.readFileSync('./pack.toml')
                var apps = toml.parse(tomlString)
                return apps.version
            } catch(err) {
                core.error("Error while reading or parsing the TOML")
                core.setFailed(err)
            }
      - run: echo "${{steps.get-version.outputs.result}}"

      - name: Rename file
        run: |
          mv buildOut/client.zip buildOut/supersymmetry-${{steps.get-version.outputs.result}}.zip
          mv buildOut/server.zip buildOut/server-${{steps.get-version.outputs.result}}.zip
          rm -f buildOut/client.zip
          rm -f buildOut/server.zip

      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.get-version.outputs.result }}
          prerelease: false
          title: ${{ steps.get-version.outputs.result }}
          files: |
            buildOut/supersymmetry-${{steps.get-version.outputs.result}}.zip
            buildOut/server-${{steps.get-version.outputs.result}}.zip
            buildOut/modlist.html